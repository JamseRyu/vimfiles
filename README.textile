h1. Vim

If you want to use vim in a GUI, you can use gVim in Linux or MacVim for Mac. Download from:

* Macvim (Mac OSX) - http://code.google.com/p/macvim/downloads/list
* gVim (Ubuntu Linux) - https://apps.ubuntu.com/cat/applications/vim-gnome/

h1. Usage

Clone this repository into your home directory as ~/.vim and then install the plugins. Such as:

<pre><code>git clone git://github.com/lucascaton/vimfiles.git ~/.vim
cd ~/.vim
git submodule update --init
ln -s ~/.vim/vimrc ~/.vimrc</pre></code>

h2. Help Tags

At first usage of vim, type ":" while in command mode and execute:

  Helptags

This will make the plugins documentations available upon :help

h2. Fonts

These are my favorite fonts:

* Monaco (my current one)
* Anonymous Pro
* Inconsolata-dz
* Bitstream Vera Sans Mono

h2. Pretty Vim Color Schemes in iTerm2

* http://kevin.colyar.net/2011/01/pretty-vim-color-schemes-in-iterm2/

h1. Plugins

h2. Ack.vim

Perl module App::Ack. Ack can be used as a replacement for 99% of the uses of grep.
* https://github.com/mileszs/ack.vim

h2. (Vim) Coffee Script

CoffeeScript support for Vim
* https://github.com/kchmck/vim-coffee-script

h2. CtrlP

Full path fuzzy file, buffer, mru and tag finder.
* http://kien.github.com/ctrlp.vim/
* https://github.com/kien/ctrlp.vim

h2. Ember.vim

Features for the Emberjs frontend framework
* https://github.com/dsawardekar/ember.vim

h2. Extradite

A git commit browser. Extends fugitive.vim.
* https://github.com/int3/vim-extradite

h2. Fugitive

A git wrapper so awesome, it should be illegal.
* https://github.com/tpope/vim-fugitive

h2. Gist-vim

For creating gists.
* https://github.com/mattn/gist-vim

h2. HTML5 omnicomplete and syntax.
* https://github.com/othree/html5.vim

h2. Nerdtree

A tree explorer plugin.
* https://github.com/scrooloose/nerdtree

h2. Portkey

Navigate files at the speed of Vim.
* https://github.com/dsawardekar/portkey

h2. Rename

A command and function that basically does a ":saveas <newfile>" then removes the old filename on the disk.
* https://github.com/danro/rename.vim

h2. Snipmate

Aims to be a concise vim script that implements some of TextMate's snippets features in Vim.
* https://github.com/msanders/snipmate.vim

h2. Sparkup (Zen-coding)

A parser for a condensed HTML format.
* https://github.com/rstacruz/sparkup
* http://code.google.com/p/zen-coding/

h2. Syntastic

Syntax checking hacks.
* https://github.com/scrooloose/syntastic

h2. Tabular

Text filtering and alignmentClone.
* https://github.com/godlygeek/tabular

h2. Tcomment

An extensible & universal comment vim-plugin that also handles embedded filetypes.
* https://github.com/tomtom/tcomment_vim

h2. Vim Abolish
Easily search for, substitute, and abbreviate multiple variants of a word.
* https://github.com/tpope/vim-abolish
* http://vimcasts.org/episodes/supercharged-substitution-with-subvert/

h2. Vim Easymotion

It provides a much simpler way to use some motions in vim.
* https://github.com/Lokaltog/vim-easymotion/

h2. Vim Endwise

Wisely add "end" in ruby, endfunction/endif/more in vim script, etc.
* https://github.com/tpope/vim-endwise

h2. Vim Handlebars

This plugin is here to help you editing Handlebars files.
* https://github.com/nono/vim-handlebars

h2. Vim Matchit

Extended % matching for HTML, LaTeX, and many other languages.
* https://github.com/tsaleh/vim-matchit

h2. PowerLine

The ultimate vim statusline utility.
* https://github.com/Lokaltog/vim-powerline

h2. Vim-rails

Ruby on Rails power tools.
* https://github.com/tpope/vim-rails

h2. Vim Ruby Runner

Execute Ruby into an output buffer, similar to âŒ˜R in TextMate.
* https://github.com/henrik/vim-ruby-runner

h1. Learn Vim

Visit the following sites to learn more about Vim:

* Learn Vim Progressively - http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/
* Vim Adventures - http://vim-adventures.com/
* Vimcasts: http://vimcasts.org
* Screencast "17 tips for Vim" (in portuguese) - http://blog.lucascaton.com.br/?p=1081
* Using Vim as a Complete Ruby on Rails IDE - http://biodegradablegeek.com/2007/12/using-vim-as-a-complete-ruby-on-rails-ide/
* Why, oh WHY, do those #?@! nutheads use vi? - http://www.viemu.com/a-why-vi-vim.html
* Byte of Vim - http://www.swaroopch.com/notes/Vim

h1. Credits

Created and maintained by Lucas Caton.
* http://blog.lucascaton.com.br/
* http://twitter.com/lucascaton

h1. Licence

The MIT License (MIT)

Copyright (c) 2013 - 2013 Lucas Caton

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
